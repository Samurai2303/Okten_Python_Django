{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACV;;;AAE7C,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAC,wDAAY,EAAC;CAClC,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHjB,iEAAoB,CAAC,MAAM,CAAC,EAC5B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;IETtB,sEAAmC;IAE/B,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,gGACF;;;IAJJ,sEAAkB;IAChB,8GAIM;IACR,4DAAM;;;IALiB,0DAAY;IAAZ,qFAAY;;ADQ5B,MAAM,YAAY;IAKvB,YAAoB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;QAJzC,UAAK,GAAG,aAAa,CAAC;IAKtB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,WAAW,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IAC7E,CAAC;;wEAVU,YAAY;0GAAZ,YAAY;QCTzB,wGAMM;;QANA,0EAAU;;;;;;;;;;;;;;;;;;;;;ACC0C;AAEF;AACT;AACO;;AAc/C,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;0GALtB,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;mIAKP,SAAS,mBAVlB,wDAAY,aAGZ,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;;;;;;;;;;;;;;;ACdpB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AppComponent} from \"./app.component\";\n\nconst routes: Routes = [\n  {path:'', component:AppComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ICar} from \"../interfaces\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'my_frontend';\n\n  cars: any\n\n  constructor(private httpClient:HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.httpClient.get<any>('/api/cars').subscribe(value => this.cars = value)\n  }\n\n\n\n\n\n}\n","<div *ngIf=\"cars\">\n  <div *ngFor=\"let car of cars.data\">\n    <div>\n      Model - {{car.model}}\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}